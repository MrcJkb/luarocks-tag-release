---
name: 'LuaRocks tag release'
description: 'Publish a package to LuaRocks when a new tag is pushed'
author: 'Marc Jakobi'
branding:
  color: 'purple'
  icon: 'moon'
inputs:
  name:
    description: "The name of the your package"
    required: true
    default: ${{ github.event.repository.name }}
  version:
    description: "The version of your package. By default, the git tag is used."
    required: true
    default: ${{ github.ref_name }}
  dependencies:
    description: "List of LuaRocks dependencies."
    required: true
    default: ""
  labels:
    description: "List of package labels."
    required: true
    default: ""
  copy_directories:
    description: |
      List of additional directories to copy.
      Only directories that exist will be copied.
      The defaults are taken from Neovim's `:help runtimepath`
      WARNING: Do not add the directories `lua`, `lib` or `rock_manifest`.
    required: true
    default: |
      {{ neovim.plugin.dirs }}
  summary:
    description: "Short description of the package."
    required: true
    default: ""
  detailed_description:
    description: "Detailed description of the package."
    required: true
    default: ""
  build_type:
    description: "The build type."
    required: true
    default: builtin
    type: choice
    options:
      - builtin
      - make
  extra_packages:
    description: |
      List of extra packages from nixpkgs that can be used for the build.
    required: true
    default: ""
  template:
    description: "Path to a rockspec template."
    required: true
    default: "/rockspec.template"
  upload:
    description: |
      Whether to upload to LuaRocks.
      WARNING: This is an undocumented input, used internally for tests.
      It is not part of the public API and may be removed without a major version bump.
    default: true
  license:
    description: |
      The license SPDX identifier.
      By default, it will be fetched from GitHub.
      But sometimes, GitHub does not recognise it,
      in which case LuaRocks will fall back to this one.
    required: false
runs:
  using: "docker"
  image: "Dockerfile"
  args:
    - ${{ inputs.extra_packages }}
    - ${{ inputs.name }}
    - ${{ inputs.version }}
    - ${{ inputs.dependencies }}
    - ${{ inputs.labels }}
    - ${{ inputs.copy-directories }}
    - ${{ inputs.summary }}
    - ${{ inputs.detailed_description }}
    - ${{ inputs.build_type }}
    - ${{ inputs.template }}
    - ${{ inputs.upload }}
    - ${{ inputs.license }}
